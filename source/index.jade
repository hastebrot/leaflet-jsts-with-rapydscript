doctype html
html
  head
    meta(charset="utf-8")
    script(src="../vendor/jquery-2.1.1/jquery.js")
    script(src="../vendor/rapydscript-0.2-dev/utils.js")
    script(src="../vendor/rapydscript-0.2-dev/ast.js")
    script(src="../vendor/rapydscript-0.2-dev/baselib.js")
    script(src="../vendor/rapydscript-0.2-dev/output.js")
    script(src="../vendor/rapydscript-0.2-dev/parse.js")
    script(src="../vendor/leaflet-0.8-dev/leaflet.js")
    script(src="../vendor/jsts-0.13.4/javascript.util.js")
    script(src="../vendor/jsts-0.13.4/jsts.js")
    script(src="../vendor/jsts-0.13.4/simplify.js")
    script(src="../vendor/ace-1.1.5/ace.js")
    link(rel="stylesheet", href="../vendor/leaflet-0.8-dev/leaflet.css")

    style.
      pre {
        padding: 10px;
        border: 1px solid #aaa;
        border-radius: 4px;
        /*display: inline-block;*/
        white-space: pre-wrap;
      }

    script(src="scriptEngine.js")
    script.
      var loadScriptFile = function(scriptFileUrl) {
        var $sourceCode = $("#sourceCode");
        var $transpiledCode = $("#transpiledCode");
        var $outputMessages = $("#outputMessages");
        var $showcase = $("#showcase");

        window._$rapyd$_print = function() {
          var args = [].slice.call(arguments, 0);
          var output = JSON.stringify(args);
          var message = output.substr(1, output.length - 2) + "\n";
          $outputMessages.text($outputMessages.text() + message);
        }

        var editor = ace.edit($sourceCode.attr("id"));
        editor.setTheme("ace/theme/textmate");
        editor.getSession().setMode("ace/mode/python");
        editor.setShowPrintMargin(true);
        editor.setShowFoldWidgets(false);
        editor.setDisplayIndentGuides(true);
        editor.setOptions({
            maxLines: Infinity
        });

        var viewer = ace.edit($transpiledCode.attr("id"));
        viewer.setTheme("ace/theme/textmate");
        viewer.getSession().setMode("ace/mode/javascript");
        viewer.setReadOnly(true);
        viewer.setShowFoldWidgets(false);
        viewer.setDisplayIndentGuides(true);
        viewer.setShowPrintMargin(false);
        viewer.renderer.setShowGutter(false);
        viewer.renderer.setHighlightGutterLine(false);
        viewer.setOptions({
            maxLines: Infinity
        });

        $.get(scriptFileUrl, function(data) {
          var parserOptions = {
            filename: "<stdin>",
            toplevel: null,
            basedir: null,
            libdir: null
          };
          var compilerOptions = {
            beautify: true,
            private_scope: true,
            omit_baselib: true
          };

          try {
            $showcase.html(null);
            $outputMessages.text("");
            //$sourceCode.text(data);
            editor.setValue(data, -1);
            var transpiledCode = transpile(editor.getValue(),
              parserOptions, compilerOptions);
            viewer.setValue(transpiledCode, -1);
            execute(transpiledCode);
          }
          catch (error) {
            alert(error.toString())
          }
        });
      };

      $(function() {
        $("#sourceFile").on("change", function() {
          loadScriptFile("../data/" + this.value);
        });
        var sourceFile = $("#sourceFile").val();
        loadScriptFile("../data/" + sourceFile);
      });

  body
    select#sourceFile
      option(value="basicTopologySuite.pyj") basicTopologySuite.pyj
      option(value="basicLeaflet.pyj") basicLeaflet.pyj
      option(value="basicPython.pyj") basicPython.pyj
    pre#sourceCode
    pre#transpiledCode
    pre#outputMessages
    div#showcase
